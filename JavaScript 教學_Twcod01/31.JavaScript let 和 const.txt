JavaScript let 和 const
    ECMAScript 2015(ECMAScript 6)
    ES2015(ES6) 新增加了兩個重要的 JavaScript 關鍵字: let 和 const。

    let 宣告的變數只在 let 命令所在的程式碼塊內有效。
    const 宣告一個唯讀的常量，一旦宣告，常量的值就不能改變。
    在 ES6 之前，JavaScript 只有兩種作用域： 全域變數 與 函式內的區域變數。

const 關鍵字
    const 用於宣告一個或多個常量，宣告時必須進行初始化，且初始化後值不可再修改：

    範例
    const PI = 3.141592653589793;
    PI = 3.14;      // 報錯
    PI = PI + 10;   // 報錯

    const定義常量與使用let 定義的變數相似：

    二者都是區塊範疇
    都不能和它所在作用域內的其他變數或函式擁有相同的名稱
    兩者還有以下兩點區別：

    const宣告的常量必須初始化，而let宣告的變數不用
    const 定義常量的值不能透過再賦值修改，也不能再次宣告。而 let 定義的變數值可以修改。
    var x = 10;
    // 這裡輸出 x 為 10
    { 
        const x = 2;
        // 這裡輸出 x 為 2
    }
    // 這裡輸出 x 為 10
    const 宣告的常量必須初始化：

    // 錯誤寫法
    const PI;
    PI = 3.14159265359;

    // 正確寫法
    const PI = 3.14159265359;

結論   
    1.使用var關鍵字宣告的全域作用域變數屬於window物件。
    2.使用let關鍵字宣告的全域作用域變數不屬於window物件。
    3.使用var關鍵字宣告的變數在任何地方都可以修改。
    4.在相同的作用域或區塊範疇中，不能使用let關鍵字來重置var關鍵字宣告的變數。
    5.在相同的作用域或區塊範疇中，不能使用let關鍵字來重置let關鍵字宣告的變數。
    6.let關鍵字在不同作用域，或不用區塊範疇中是可以重新宣告賦值的。
    7.在相同的作用域或區塊範疇中，不能使用const關鍵字來重置var和let關鍵字宣告的變數。
    8.在相同的作用域或區塊範疇中，不能使用const關鍵字來重置const關鍵字宣告的變數
    9.const 關鍵字在不同作用域，或不同區塊範疇中是可以重新宣告賦值的:
    10.var關鍵字定義的變數可以先使用後宣告。
    11.let關鍵字定義的變數需要先宣告再使用。
    12.const關鍵字定義的常量，宣告時必須進行初始化，且初始化後不可再修改。